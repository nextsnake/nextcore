name: Lint
permissions:
  contents: read
on:
  pull_request: {}
  push:
    branches: ["master"]
jobs:
  black:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Set up Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"
      - name: Install poetry
        run: pip install poetry
      - name: Install dependencies
        run: poetry install
      - name: Run tests
        run: poetry run task black_check
  isort:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Set up Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"
      - name: Install poetry
        run: pip install poetry
      - name: Install dependencies
        run: poetry install
      - name: Run tests
        run: poetry run task isort_check
  pyright:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11"]
      fail-fast: false
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: poetry

      - name: Install dependencies
        run: poetry install -E speed

      - name: Set up pyright
        run: echo "PYRIGHT_VERSION=$(python -c 'import pyright; print(pyright.__pyright_version__)')" >> $GITHUB_ENV

      - name: Run pyright (Linux)
        uses: jakebailey/pyright-action@v1.4.2
        with:
          version: ${{ env.PYRIGHT_VERSION }}
          python-version: ${{ matrix.python-version }}
          python-platform: Linux
          # only add comments for 3.8
          no-comments: ${{ matrix.python-version != '3.8' }}
          warnings: true

      - name: Run pyright (Windows)
        uses: jakebailey/pyright-action@v1.0.3
        # run anyway
        if: success() || failure()
        with:
          version: ${{ env.PYRIGHT_VERSION }}
          python-version: ${{ matrix.python-version }}
          python-platform: Windows
          # only add comments for one platform
          no-comments: true
          warnings: true
  style-guide:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Set up Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"
      - name: Install poetry
        run: pip install poetry
      - name: Install SSH key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.DEPLOY_KEY }}
          known_hosts: ${{ secrets.KNOWN_HOSTS }}
          if_key_exists: replace
      - name: Install style-guide
        run: poetry add git+ssh://git@github.com/nextsnake/style-guide.git --dev
      - name: Install dependencies
        run: poetry install
      - name: Enable the problem checker
        run: echo "::add-matcher::.github/checkers/pylint.json"
      - name: Run pylint
        run: poetry run pylint -d all -e asyncio-best-practices,license,outdated-typing --load-plugins=nextstyle nextcore/
  slots-check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Set up Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"
      - name: Install poetry
        run: pip install poetry
      - name: Install dependencies
        run: poetry install
      - name: Run slotscheck
        run: poetry run slotscheck nextcore/
